version: '3.8'

services:
  bioneuro-api:
    build:
      context: ../..
      dockerfile: deployment/bioneuro-production/Dockerfile
      target: production
    image: bioneuro-olfactory-fusion:latest
    container_name: bioneuro-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=INFO
      - WORKERS=4
      - MAX_CACHE_SIZE=10000
      - MEMORY_LIMIT_MB=2048
      - ENABLE_MONITORING=true
    volumes:
      - bioneuro-data:/app/data
      - bioneuro-logs:/app/logs
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.path.insert(0, '/app/src'); from lexgraph_legal_rag.bioneuro_olfactory_fusion import get_fusion_engine; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - bioneuro-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  bioneuro-monitoring:
    image: prom/prometheus:latest
    container_name: bioneuro-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - bioneuro-network

  bioneuro-dashboard:
    image: grafana/grafana:latest
    container_name: bioneuro-dashboard
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - bioneuro-network

  redis:
    image: redis:7-alpine
    container_name: bioneuro-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - bioneuro-network

volumes:
  bioneuro-data:
  bioneuro-logs:
  prometheus-data:
  grafana-data:
  redis-data:

networks:
  bioneuro-network:
    driver: bridge